{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0413\\u043E\\u0441\\u043F\\u043E\\u0434\\u0438\\u043D\\\\Desktop\\\\Chat\\\\frontend\\\\chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { WaitingRoom } from \"./components/WaitingRoom\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { useState } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { sendMessage } from \"@microsoft/signalr/dist/esm/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connection, setConnection] = useState(null);\n  const [chatRoom, setChatRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const joinChat = async (userName, chatRoom) => {\n    var connection = new HubConnectionBuilder().withUrl(\"http://localhost:5108/chat\").withAutomaticReconnect().build();\n    connection.on(\"ReceiveMessage\", (userName, message) => {\n      setMessages(messages => [...messages, {\n        userName,\n        message\n      }]);\n    });\n    try {\n      await connection.start();\n      await connection.invoke(\"JoinChat\", {\n        userName,\n        chatRoom\n      });\n      setConnection(connection);\n      setChatRoom(chatRoom);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const sendMessage = message => {\n    connection.invoke(\"SendMessage\", message);\n  };\n  const closeChat = async () => {\n    await connection.stop();\n    setConnection(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: connection ? /*#__PURE__*/_jsxDEV(Chat, {\n      messages: messages,\n      chatRoom: chatRoom,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WaitingRoom, {\n      joinChat: joinChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KqX0VervJw2wfA7Z/C0t6fOzTzU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WaitingRoom","HubConnectionBuilder","useState","Chat","sendMessage","jsxDEV","_jsxDEV","App","_s","connection","setConnection","chatRoom","setChatRoom","messages","setMessages","joinChat","userName","withUrl","withAutomaticReconnect","build","on","message","start","invoke","error","console","log","closeChat","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Господин/Desktop/Chat/frontend/chat/src/App.js"],"sourcesContent":["import { WaitingRoom } from \"./components/WaitingRoom\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { useState } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { sendMessage } from \"@microsoft/signalr/dist/esm/Utils\";\nfunction App() {\n  const [connection, setConnection] = useState(null);\n  const [chatRoom, setChatRoom] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const joinChat = async (userName, chatRoom) => {\n    var connection = new HubConnectionBuilder()\n      .withUrl(\"http://localhost:5108/chat\")\n      .withAutomaticReconnect()\n      .build();\n\n    connection.on(\"ReceiveMessage\", (userName, message) => {\n      setMessages((messages) => [...messages, { userName, message }]);\n    });\n\n    try {\n      await connection.start();\n      await connection.invoke(\"JoinChat\", { userName, chatRoom });\n\n      setConnection(connection);\n      setChatRoom(chatRoom);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const sendMessage = (message) => {\n    connection.invoke(\"SendMessage\", message);\n  };\n\n  const closeChat = async () => {\n    await connection.stop();\n    setConnection(null);\n  };\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      {connection ? (\n        <Chat\n          messages={messages}\n          chatRoom={chatRoom}\n          sendMessage={sendMessage}\n        />\n      ) : (\n        <WaitingRoom joinChat={joinChat} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,0BAA0B;AACtD,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEL,QAAQ,KAAK;IAC7C,IAAIF,UAAU,GAAG,IAAIR,oBAAoB,CAAC,CAAC,CACxCgB,OAAO,CAAC,4BAA4B,CAAC,CACrCC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEVV,UAAU,CAACW,EAAE,CAAC,gBAAgB,EAAE,CAACJ,QAAQ,EAAEK,OAAO,KAAK;MACrDP,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE;QAAEG,QAAQ;QAAEK;MAAQ,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,IAAI;MACF,MAAMZ,UAAU,CAACa,KAAK,CAAC,CAAC;MACxB,MAAMb,UAAU,CAACc,MAAM,CAAC,UAAU,EAAE;QAAEP,QAAQ;QAAEL;MAAS,CAAC,CAAC;MAE3DD,aAAa,CAACD,UAAU,CAAC;MACzBG,WAAW,CAACD,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMpB,WAAW,GAAIiB,OAAO,IAAK;IAC/BZ,UAAU,CAACc,MAAM,CAAC,aAAa,EAAEF,OAAO,CAAC;EAC3C,CAAC;EAED,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMlB,UAAU,CAACmB,IAAI,CAAC,CAAC;IACvBlB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,2DAA2D;IAAAC,QAAA,EACvErB,UAAU,gBACTH,OAAA,CAACH,IAAI;MACHU,QAAQ,EAAEA,QAAS;MACnBF,QAAQ,EAAEA,QAAS;MACnBP,WAAW,EAAEA;IAAY;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAEF5B,OAAA,CAACN,WAAW;MAACe,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA/CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}